//
//  ViewController.swift
//  KBoard
//
//  Created by Hankyu Lee on 2022/07/13.
//

import UIKit

private let reuseIdentifier = "CustomTableCell"
// reuseIdentifier = Ïû¨ÏÇ¨Ïö© Í∞ÄÎä•Ìïú ÏÖÄÏùÑ ÏãùÎ≥ÑÌïòÎäîÎç∞ ÏÇ¨Ïö©ÎêòÎäî Î¨∏ÏûêÏó¥

class ViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {
    
    // MARK: - Properties
    // tableView ÏÉùÏÑ±
    private let tableView = UITableView()
    
    let categorywords = ["ÏúåÏßÑÍ∑ú", "Î∞îÎ≥¥", "Î©îÎ°±", "ÏûÑÏãúÎç∞Ïù¥ÌÑ∞ÏûêÎ¶¨"]
    
    lazy var category = [
        ["üíúBTSüíú", "\(categorywords.count) Words"],
        ["üíúJungKooküíú", "\(categorywords.count) Words" ],
        ["üíúJINüíú", "\(categorywords.count) Words"]
    ]
    
    private let editButton: UIButton = {
        let editButton = UIButton()
        editButton.setTitle("Edit", for: .normal)
        editButton.setTitleColor(.blue, for: .normal)
        
        return editButton
    }()
    
    // MARK: - Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        configureUI()
    }
    
    private func configureUI() {
        self.view.backgroundColor = .systemGray5
        setNavigation()
        setTableView()
        //        setEditButton()
    }
    
    private func setNavigation() {
        self.navigationItem.title = "My Board"
        navigationController?.navigationBar.prefersLargeTitles = true
        navigationItem.rightBarButtonItems = [
            UIBarButtonItem(barButtonSystemItem: .add, target: self, action: nil),
            UIBarButtonItem(image: UIImage(systemName: "keyboard"), style: .done, target: self, action: nil)
        ]
    }
    
    //  ÌÖåÏù¥Î∏îÎ∑∞ Î©îÏÜåÎìú
    private func setTableView() {
        self.tableView.backgroundColor = .clear
        tableView.register(CustomTableCell.self, forCellReuseIdentifier: reuseIdentifier)
        //        tableView.rowHeight = 120
        //        tableView.anchor(left: view.leftAnchor, right: view.rightAnchor, paddingLeft: 16, paddingRight: 16) Ïò§Î•òÎú∏
        tableView.separatorStyle = .none
        tableView.dataSource = self
        tableView.delegate = self
        
        view.addSubview(tableView)
        tableView.frame = view.frame
        
    }
    
    private func setEditButton() {
        view.addSubview(editButton)
        editButton.frame = view.frame
        editButton.anchor(top: view.topAnchor, right: view.rightAnchor, paddingTop: 50, paddingRight: 10)
    }
    
    private func showActionSheet() {
        let actionSheet = UIAlertController(title: "ÌÉÄÏù¥ÌãÄ", message: "Ïï°ÏÖòÏãúÌä∏ Î©îÏãúÏßÄ", preferredStyle: .actionSheet)
        let rename = UIAlertAction(title: "Rename", style: .default) { _ in
            print("ÏàòÏ†ï")
            self.showRenameAlert()
        }
        let delete = UIAlertAction(title: "Delete", style: .destructive) { _ in
            print("ÏÇ≠Ï†ú")
            self.showDeleteAlert()
        }
        let cancel = UIAlertAction(title: "Cancel", style: .cancel)
        actionSheet.addAction(rename)
        actionSheet.addAction(delete)
        actionSheet.addAction(cancel)
        
        self.present(actionSheet, animated: true, completion: nil)
    }
    
    private func showDeleteAlert() {
        // ÏΩîÎìú ÏàòÏ†ï ÌïÑÏöî!! ÏÇ≠Ï†ú ÌåùÏóÖÏóêÏÑú ÏÑ†ÌÉùÌïú Ïπ¥ÌÖåÍ≥†Î¶¨Î™ÖÏù¥ Îñ†ÏïºÌïòÎäîÎç∞ Ïù¥Í±∞ Ïñ¥ÏºÄ Ìï¥ÏïºÌï†ÏßÄ Î¨ºÏñ¥Î≥¥Í∏∞!
        let deleteAlert = UIAlertController(title: "Delete Category", message: "Do you want to delete \(category[0].first) category?", preferredStyle: .alert)
        let delete = UIAlertAction(title: "Delete", style: .destructive) {_ in
            // ÏΩîÎìú ÏàòÏ†ï ÌïÑÏöî!! ÏÑ†ÌÉùÌïú ÏÖÄÏùÑ ÏßÄÏõåÏïºÌï®
//            print("Ïπ¥ÌÖåÍ≥†Î¶¨ ÏÇ≠Ï†ú Í∏∞Îä• ÎÑ£Ïñ¥ÏïºÌï® Ïñ¥ÏºÄ ÏóÜÏï†ÎàÑ..")
            
        }
        let cancel = UIAlertAction(title: "Cancel", style: .cancel)
        
        deleteAlert.addAction(delete)
        deleteAlert.addAction(cancel)
        
        self.present(deleteAlert, animated: true, completion: nil)
    }
    
    private func showRenameAlert() {
        let renameAlert = UIAlertController(title: "Rename Category", message: "Do you want to rename category?", preferredStyle: .alert)
        let save = UIAlertAction(title: "Save", style: .default) {_ in
            print("Ï†ÄÏû•")
        }
        let cancel = UIAlertAction(title: "cancel", style: .cancel)
        
        renameAlert.addAction(save)
        renameAlert.addAction(cancel)
        renameAlert.addTextField { (newCategoryName) in
            newCategoryName.placeholder = "New Category Name"
        }
        
        self.present(renameAlert, animated: true, completion: nil)
    }
    
}

// MARK: - UITableVIewDataSource

extension ViewController {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return category.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: reuseIdentifier, for: indexPath) as! CustomTableCell
        cell.categoryInfo = category[indexPath.row]
        cell.cellDelegate = self
        cell.moreButton.tag = indexPath.row
        return cell
    }
    
    // MARK: - UITableViewDelegate
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        guard let currentCell = tableView.cellForRow(at: indexPath) as? CustomTableCell else return
        tableView.deselectRow(at: indexPath, animated: true)
        print("Ïπ¥ÌÖåÍ≥†Î¶¨ÏÑ†ÌÉùÎê®")
    }
}

extension ViewController: CategoryEditDelegate {
    func tapMoreButton() {
        showActionSheet()
    }
}
